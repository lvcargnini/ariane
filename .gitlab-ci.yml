before_script:
  - export CXX=g++-7 CC=gcc-7
  # paths to local or network installations (the riscv toolchain and 
  # verilator are not built in the ci job as in travis)
  - export QUESTASIM_HOME=
  - export QUESTASIM_VERSION=
  - export QUESTASIM_FLAGS=
  - export RISCV=/scratch/$USER/projects/riscv_install
  - export VERILATOR_ROOT=/scratch/$USER/projects/verilator-3.924
  # setup dependent paths
  - export PATH=${RISCV}/bin:$VERILATOR_ROOT/bin:${PATH}
  - export LIBRARY_PATH=$RISCV/lib
  - export LD_LIBRARY_PATH=$RISCV/lib
  - export C_INCLUDE_PATH=$RISCV/include:$VERILATOR_ROOT/include
  - export CPLUS_INCLUDE_PATH=$RISCV/include:$VERILATOR_ROOT/include
  # number of parallel jobs to use for make commands and simulation
  - export NUM_JOBS=4
  - ci/make-tmp.sh
  - git submodule update --init --recursive

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - test_std

# prepare
build:
  stage: build
  script:
    - ci/build-riscv-tests.sh
    - ci/get-torture.sh
    - make clean
    - make torture-gen
  artifacts:
      paths:
        - tmp 

# rv64ui-p-* and rv64ui-v-* tests    
run-asm-tests-questa:
  stage: test_std
  script:
    - make -j${NUM_JOBS} run-asm-tests 
  dependencies:
    - build

run-benchmarks-questa:
  stage: test_std
  script:
    - make -j${NUM_JOBS} run-benchmarks 
  dependencies:
    - build    

# rv64ui-p-* tests
run-asm-tests1-verilator:
  stage: test_std
  script:
    - make -j${NUM_JOBS} run-asm-tests1-verilator 
  dependencies:
    - build

# rv64ui-v-* tests
run-asm-tests2-verilator:
  stage: test_std
  script:
    - make -j${NUM_JOBS} run-asm-tests2-verilator 
  dependencies:
    - build    

run-benchmarks-verilator:
  stage: test_std
  script:
    - make -j${NUM_JOBS} run-benchmarks-verilator 
  dependencies:
    - build

torture:
  stage: test_std
  script:
    - make torture-rtest
    - make torture-rtest-verilator
  dependencies:
    - build
